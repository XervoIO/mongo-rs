version: '2'

services:

  mongo-rs:
    container_name: mongo-rs
    image: onmodulus/mongo-rs:\${MONGO_VERSION}
    networks:
      - mongo
    environment:
      RUN_BACKUPS: "${RUN_BACKUPS}"
    volumes:
      - ${DIR}/../conf:/opt/modulus/conf
      - /mnt/data:/data
      - /mnt/logs:/logs
    ports:
      - "27017:27017"
      - "28017:28017"
    logging:
      driver: json-file
      options:
        max-file: "4"
        max-size: "25m"
    restart: unless-stopped

  scraper:
    container_name: scraper
    image: onmodulus/scraper:\${SCRAPER_VERSION}
    networks:
      - mongo
    environment:
      DEBUG: scraper*,-scraper:entry
      NODE_ENV: production
      SCRAPER_API_HOST: ${API_HOST}
      SCRAPER_API_PORT: ${API_PORT}
      SCRAPER_API_TLS: "${API_TLS}"
      SCRAPER_API_TOKEN: ${ADMIN_TOKEN}
      SCRAPER_INSTRUMENTAL_HOST: collector.instrumentalapp.com
      SCRAPER_INSTRUMENTAL_PORT: 8000
      SCRAPER_INSTRUMENTAL_TOKEN: ${INSTRUMENTAL_TOKEN}
      SCRAPER_SLOW_QUERIES_PER_DB: 10
      SCRAPER_SLOW_QUERIES_MIN_DURATION: 10
      SCRAPER_SLOW_QUERIES_SEND_INTERVAL: 900000
      SCRAPER_SLOW_QUERIES_PARALLEL_SEND: 5
      SCRAPER_SLOW_QUERIES_BATCH_SIZE: 20
      SCRAPER_MONGO_LOG_PATH: /mnt/mongo.log
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    logging:
      driver: json-file
      options:
        max-file: "4"
        max-size: "25m"
    restart: unless-stopped
    depends_on:
      - mongo-rs

networks:
  mongo: